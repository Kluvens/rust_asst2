# RSheets Mark Request

# Marked Questions

These questions are listed in the spec, and you must fill them out
to receive marks for the Design Questions.

## Question 1:
In this program, I read from the terminal line by line.
As mentioned in the spec, the program has done separation by first colon,
so we just need to take the second part.
We then check if the statement starts with 'get' or 'set', then do corresponding actions
I directly interpret this, whereas an alternative would be
create a enum just like assignment 1.
The alternative method might be better because it is clearer and more scalable.
However, the idea would still be, if it is a 'get', then we just want values,
if it is 'set', we want to do some manipulations on the values we stored.

## Question 2:
I handled this in 'handle_message' method, we first use 'find_variables' method
to get all variables, and then check each variable.
If the variable has '_', then it must be either a vector or a matrix.
We then call parse method, if the column of first cell is the same as second cell
or the row of first cell is the same is the same of second cell, it is a vector varaible.
Otherwise, if both rows and columns are different, it is a matrix varaible.
It looks my code has some duplications, but I believe they are necessary.
Probably I could improve on the parsing method, and try it make it more concise and performant.

## Question 3:
In the start_server function, I created new threads to allow multiple users and update cells.
If this application is single-threaded, I just need to make sure everything occur sequentially.
That is, get command from the terminal, get or set the cell, then reset the depedent cells.

## Question 4:

## Question 5:
I created a channel, and if a cell was updated, another will receive this information,
then this thread will try to grab all dependent cells and then update correspondingly.
This code can be found on start_server, I also used recursion to handle multiple dependencies.

# Questions to the Marker (OPTIONAL)

Remember: you don't have to fill these out; but if
you want to get feedback on a particular element of
your code; you can!

1.

2.

3.
